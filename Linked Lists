import java.util.*;

public class Main {
    public static void main (String args[])
    {
        int data, position,deldata;
        int choice1,choice2;
        LinkedList ll = new LinkedList ();
        Scanner sc = new Scanner (System.in);
        for (int i=0; i<100;i++)
        {
            System.out.println("\nWhat would you like to do?\n1. Insert\n2. Delete");
            choice1 = sc.nextInt();
            if (choice1 == 1)
            {
                System.out.println("Enter the data you want to enter - ");
                data = sc.nextInt();
                System.out.println("Insert at 1. Start || 2. End || 3. In between");
                choice2 = sc.nextInt();
                if (choice2 == 1)
                {
                    ll.insertstart(data);
                    ll.printlist();
                }
                if (choice2 == 2)
                {
                    ll.insertend(data);
                    ll.printlist();
                }
                if (choice2 == 3)
                {
                    System.out.println("Insert the data after which you want to enter it - ");
                    position = sc.nextInt();
                    ll.insertbetween(data, position);
                    ll.printlist();
                }
            }
            if (choice1 == 2)
            {
                System.out.println("Delete from 1. Start || 2. End || 3. In between");
                choice2 = sc.nextInt();
                if (choice2 == 1)
                {
                    deldata = ll.deletestart();
                    ll.printlist();
                }
                if (choice2 == 2)
                {
                    deldata = ll.deleteend();
                    ll.printlist();
                }
                if (choice2 == 3)
                {
                    System.out.println("Insert the data after which you want to delete - ");
                    position = sc.nextInt();
                    deldata = ll.deletebetween(position);
                    ll.printlist();
                }
            }
        }
    }
}

class node{
    int info;
    node next;
}

class LinkedList{
    
    static node list = new node ();
    void insertstart(int data)
    {
        node p = new node();
        p.info = data;
        if (list!= null)
        {
            p.next = list;
            list = p;
        }
        else{
            list = p;
        }
    }
    
    void insertend(int data)
    {
        node p = new node();
        node q = new node ();
        p.info = data;
        q=list;
        while (q.next != null)
        {
            q = q.next;
        }
        q.next = p;
        p.next = null;
    }
    
    void insertbetween(int data, int position)
    {
        node p = new node();
        node q = new node ();
        node r = new node ();
        r.info = data;
        q = list;
        p = list;
        while (q.info != position)
        {
            q=p;
            p = p.next;
        }
        r.next = q;
        q.next = r;
    }
    
    int deletestart()
    {
        node p = new node();
        int deldata;
        p = list;
        list =list.next;
        deldata = p.info;
        p = null;
        return deldata;
    }
    
    int deleteend()
    {
        node p = new node();
        node q = new node ();
        int deldata;
        p = list;
        while (p.next != null)
        {
            q=p;
            p = p.next;
        }
        deldata = p.info;
        p = null;
        q.next = null;
        return deldata;
    }
    
    int deletebetween(int position)
    {
        node p = new node();
        node q = new node ();
        p = list;
        int deldata;
        while (p.info != position)
        {
            q=p;
            p =p.next;
        }
        q.next = p.next;
        deldata = p.info;
        p = null;
        return deldata;
    }
    
    void printlist ()
    {
        node p = new node();
        p = list;
        if (list == null)
        {System.out.println("The list is empty.");}
        else
        {
            while (p.next != null)
            {
                System.out.print(p.info+" ");
                p = p.next;
            }
        }
    }
}
