import java.util.*;

class Main 
{
	static int[][] adj;
	static int time = 1;

	static void addEdge(int x, int y)
	{
	    adj[x][y] = 1;
	    adj[y][x] = 1;
	}

	static void dfs(int start, boolean[] visited)
	{
		System.out.print("Node - "+start + " Start Time - "+time);
		time++;
		System.out.println();
		visited[start] = true;
		for (int i = 0; i < adj[start].length; i++) 
		{
			if (adj[start][i] == 1 && (!visited[i])) 
			{
				dfs(i, visited);
				System.out.print("Node - "+i + " End Time - "+time);
				time++;
				System.out.println();        
			}
		}
	}
	 
	public static void main(String[] args)
	{
		Scanner sc = new Scanner (System.in);
		System.out.println("Enter the number of Vertices.");
		int size = sc.nextInt();
		adj = new int [size][size];
		while (true)
		{
			System.out.println("1.	Add Edge	2.Print DFS");
			int choice = sc.nextInt();
			if (choice ==1)
			{
				System.out.println("Enter point 1.");
				int x= sc.nextInt();
				System.out.println("Enter point 2.");
				int y= sc.nextInt();
				addEdge(x,y);
			}
			else if (choice == 2)
			{break;}
		}
		printmat (adj,size);
		boolean[] visited = new boolean[size];
		System.out.println("Specify Start Point.");
		int start = sc.nextInt();
		dfs(start, visited);
		System.out.print("Node - "+start + " End Time - "+time+"\n");
	}
	
	static void printmat(int [][]mat, int size)
	{
		for (int i=0;i<size;i++)
		{
			for (int j=0;j<size;j++)
			{
				System.out.print(mat[i][j]+" ");
			}
			System.out.println();
		}
	}
}
 
